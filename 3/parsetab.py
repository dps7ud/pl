
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '267F8260A69CEEF7ABBAE5D7633B8C68'
    
_lr_action_items = {'THEN':([5,14,36,39,41,44,47,53,54,55,57,69,75,77,79,80,81,82,83,85,86,88,99,104,112,113,115,],[-15,-16,-44,-43,-42,-45,-41,-29,-30,-35,76,-39,-40,-28,-34,-38,-33,-36,-37,-31,-32,-17,-20,-27,-18,-26,-19,]),'WHILE':([5,14,29,34,36,37,38,39,40,41,42,43,44,46,47,53,54,55,60,61,62,63,64,66,67,69,70,71,72,74,75,76,77,78,79,80,81,82,83,85,86,88,90,91,93,98,99,100,104,105,111,112,113,115,],[-15,-16,34,34,-44,34,34,-43,34,-42,34,34,-45,34,-41,-29,-30,-35,34,34,34,34,34,34,34,-39,34,34,34,34,-40,34,-28,34,-34,-38,-33,-36,-37,-31,-32,-17,34,34,34,34,-20,34,-27,34,34,-18,-26,-19,]),'COLON':([14,15,24,26,31,],[-16,19,30,32,49,]),'FI':([5,14,36,39,41,44,47,53,54,55,69,75,77,79,80,81,82,83,85,86,88,99,104,110,112,113,115,],[-15,-16,-44,-43,-42,-45,-41,-29,-30,-35,-39,-40,-28,-34,-38,-33,-36,-37,-31,-32,-17,-20,-27,113,-18,-26,-19,]),'NEW':([5,14,29,34,36,37,38,39,40,41,42,43,44,46,47,53,54,55,60,61,62,63,64,66,67,69,70,71,72,74,75,76,77,78,79,80,81,82,83,85,86,88,90,91,93,98,99,100,104,105,111,112,113,115,],[-15,-16,35,35,-44,35,35,-43,35,-42,35,35,-45,35,-41,-29,-30,-35,35,35,35,35,35,35,35,-39,35,35,35,35,-40,35,-28,35,-34,-38,-33,-36,-37,-31,-32,-17,35,35,35,35,-20,35,-27,35,35,-18,-26,-19,]),'TRUE':([5,14,29,34,36,37,38,39,40,41,42,43,44,46,47,53,54,55,60,61,62,63,64,66,67,69,70,71,72,74,75,76,77,78,79,80,81,82,83,85,86,88,90,91,93,98,99,100,104,105,111,112,113,115,],[-15,-16,36,36,-44,36,36,-43,36,-42,36,36,-45,36,-41,-29,-30,-35,36,36,36,36,36,36,36,-39,36,36,36,36,-40,36,-28,36,-34,-38,-33,-36,-37,-31,-32,-17,36,36,36,36,-20,36,-27,36,36,-18,-26,-19,]),'MINUS':([5,14,36,39,41,44,45,47,52,53,54,55,56,57,59,69,75,77,79,80,81,82,83,85,86,88,91,92,94,95,99,100,103,104,110,112,113,115,],[-15,-16,-44,-43,-42,-45,67,-41,67,-29,-30,-35,67,67,67,67,-40,-28,-34,67,-33,67,67,-31,-32,67,67,67,67,67,-20,67,67,-27,67,-18,-26,-19,]),'DOT':([5,14,36,39,41,44,45,47,52,53,54,55,56,57,59,69,75,77,79,80,81,82,83,84,85,86,88,91,92,94,95,99,100,103,104,110,112,113,115,],[-15,-16,-44,-43,-42,-45,68,-41,68,-29,68,68,68,68,68,68,-40,-28,68,68,68,68,68,97,68,68,68,68,68,68,68,-20,68,68,-27,68,-18,-26,-19,]),'DIVIDE':([5,14,36,39,41,44,45,47,52,53,54,55,56,57,59,69,75,77,79,80,81,82,83,85,86,88,91,92,94,95,99,100,103,104,110,112,113,115,],[-15,-16,-44,-43,-42,-45,60,-41,60,-29,-30,-35,60,60,60,60,-40,-28,-34,60,-33,60,60,60,60,60,60,60,60,60,-20,60,60,-27,60,-18,-26,-19,]),'LE':([5,14,36,39,41,44,45,47,52,53,54,55,56,57,59,69,75,77,79,80,81,82,83,85,86,88,91,92,94,95,99,100,103,104,110,112,113,115,],[-15,-16,-44,-43,-42,-45,64,-41,64,-29,-30,-35,64,64,64,64,-40,-28,-34,None,-33,None,None,-31,-32,64,64,64,64,64,-20,64,64,-27,64,-18,-26,-19,]),'RPAREN':([5,14,20,25,27,36,39,41,44,47,50,51,53,54,55,56,69,71,75,77,79,80,81,82,83,85,86,88,89,91,98,99,100,101,104,107,108,111,112,113,114,115,],[-15,-16,24,31,-12,-44,-43,-42,-45,-41,-14,-13,-29,-30,-35,75,-39,-25,-40,-28,-34,-38,-33,-36,-37,-31,-32,-17,99,-25,-25,-20,-25,-24,-27,112,-23,-25,-18,-26,115,-19,]),'SEMI':([4,5,12,14,18,23,28,36,39,41,44,45,47,53,54,55,59,69,75,77,79,80,81,82,83,85,86,88,99,102,104,109,112,113,115,],[7,-15,17,-16,-4,-8,-5,-44,-43,-42,-45,-9,-41,-29,-30,-35,78,-39,-40,-28,-34,-38,-33,-36,-37,-31,-32,-17,-20,-11,-27,-10,-18,-26,-19,]),'ISVOID':([5,14,29,34,36,37,38,39,40,41,42,43,44,46,47,53,54,55,60,61,62,63,64,66,67,69,70,71,72,74,75,76,77,78,79,80,81,82,83,85,86,88,90,91,93,98,99,100,104,105,111,112,113,115,],[-15,-16,37,37,-44,37,37,-43,37,-42,37,37,-45,37,-41,-29,-30,-35,37,37,37,37,37,37,37,-39,37,37,37,37,-40,37,-28,37,-34,-38,-33,-36,-37,-31,-32,-17,37,37,37,37,-20,37,-27,37,37,-18,-26,-19,]),'LARROW':([5,14,23,47,],[-15,-16,29,70,]),'LT':([5,14,36,39,41,44,45,47,52,53,54,55,56,57,59,69,75,77,79,80,81,82,83,85,86,88,91,92,94,95,99,100,103,104,110,112,113,115,],[-15,-16,-44,-43,-42,-45,63,-41,63,-29,-30,-35,63,63,63,63,-40,-28,-34,None,-33,None,None,-31,-32,63,63,63,63,63,-20,63,63,-27,63,-18,-26,-19,]),'PLUS':([5,14,36,39,41,44,45,47,52,53,54,55,56,57,59,69,75,77,79,80,81,82,83,85,86,88,91,92,94,95,99,100,103,104,110,112,113,115,],[-15,-16,-44,-43,-42,-45,66,-41,66,-29,-30,-35,66,66,66,66,-40,-28,-34,66,-33,66,66,-31,-32,66,66,66,66,66,-20,66,66,-27,66,-18,-26,-19,]),'TILDE':([5,14,29,34,36,37,38,39,40,41,42,43,44,46,47,53,54,55,60,61,62,63,64,66,67,69,70,71,72,74,75,76,77,78,79,80,81,82,83,85,86,88,90,91,93,98,99,100,104,105,111,112,113,115,],[-15,-16,38,38,-44,38,38,-43,38,-42,38,38,-45,38,-41,-29,-30,-35,38,38,38,38,38,38,38,-39,38,38,38,38,-40,38,-28,38,-34,-38,-33,-36,-37,-31,-32,-17,38,38,38,38,-20,38,-27,38,38,-18,-26,-19,]),'COMMA':([5,14,27,36,39,41,44,47,50,53,54,55,69,71,75,77,79,80,81,82,83,85,86,88,91,98,99,100,104,111,112,113,115,],[-15,-16,33,-44,-43,-42,-45,-41,-14,-29,-30,-35,-39,90,-40,-28,-34,-38,-33,-36,-37,-31,-32,-17,90,90,-20,90,-27,90,-18,-26,-19,]),'IDENTIFIER':([5,9,14,16,17,20,29,33,34,36,37,38,39,40,41,42,43,44,46,47,53,54,55,60,61,62,63,64,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,85,86,88,90,91,93,97,98,99,100,104,105,111,112,113,115,],[-15,14,-16,14,14,14,14,14,14,-44,14,14,-43,14,-42,14,14,-45,14,-41,-29,-30,-35,14,14,14,14,14,14,14,14,-39,14,14,14,14,-40,14,-28,14,-34,-38,-33,-36,-37,-31,-32,-17,14,14,14,14,14,-20,14,-27,14,14,-18,-26,-19,]),'CLASS':([0,7,],[2,2,]),'$end':([1,3,7,10,],[-1,0,-2,-3,]),'INHERITS':([5,6,],[-15,8,]),'STRING':([5,14,29,34,36,37,38,39,40,41,42,43,44,46,47,53,54,55,60,61,62,63,64,66,67,69,70,71,72,74,75,76,77,78,79,80,81,82,83,85,86,88,90,91,93,98,99,100,104,105,111,112,113,115,],[-15,-16,39,39,-44,39,39,-43,39,-42,39,39,-45,39,-41,-29,-30,-35,39,39,39,39,39,39,39,-39,39,39,39,39,-40,39,-28,39,-34,-38,-33,-36,-37,-31,-32,-17,39,39,39,39,-20,39,-27,39,39,-18,-26,-19,]),'EQUALS':([5,14,36,39,41,44,45,47,52,53,54,55,56,57,59,69,75,77,79,80,81,82,83,85,86,88,91,92,94,95,99,100,103,104,110,112,113,115,],[-15,-16,-44,-43,-42,-45,61,-41,61,-29,-30,-35,61,61,61,61,-40,-28,-34,None,-33,None,None,-31,-32,61,61,61,61,61,-20,61,61,-27,61,-18,-26,-19,]),'RBRACE':([5,9,13,14,16,17,21,22,36,39,41,44,47,53,54,55,58,69,75,77,78,79,80,81,82,83,85,86,88,92,96,99,103,104,112,113,115,],[-15,-6,18,-16,-6,-6,28,-7,-44,-43,-42,-45,-41,-29,-30,-35,77,-39,-40,-28,-21,-34,-38,-33,-36,-37,-31,-32,-17,102,-22,-20,109,-27,-18,-26,-19,]),'TIMES':([5,14,36,39,41,44,45,47,52,53,54,55,56,57,59,69,75,77,79,80,81,82,83,85,86,88,91,92,94,95,99,100,103,104,110,112,113,115,],[-15,-16,-44,-43,-42,-45,62,-41,62,-29,-30,-35,62,62,62,62,-40,-28,-34,62,-33,62,62,62,62,62,62,62,62,62,-20,62,62,-27,62,-18,-26,-19,]),'AT':([5,14,36,39,41,44,45,47,52,53,54,55,56,57,59,69,75,77,79,80,81,82,83,85,86,88,91,92,94,95,99,100,103,104,110,112,113,115,],[-15,-16,-44,-43,-42,-45,65,-41,65,-29,65,65,65,65,65,65,-40,-28,65,65,65,65,65,65,65,65,65,65,65,65,-20,65,65,-27,65,-18,-26,-19,]),'LPAREN':([5,14,15,29,34,36,37,38,39,40,41,42,43,44,46,47,53,54,55,60,61,62,63,64,66,67,69,70,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,88,90,91,93,98,99,100,104,105,106,111,112,113,115,],[-15,-16,20,40,40,-44,40,40,-43,40,-42,40,40,-45,40,71,-29,-30,-35,40,40,40,40,40,40,40,-39,40,40,40,40,-40,40,-28,40,-34,-38,-33,-36,-37,-31,-32,98,-17,40,40,40,40,-20,40,-27,40,111,40,-18,-26,-19,]),'INTEGER':([5,14,29,34,36,37,38,39,40,41,42,43,44,46,47,53,54,55,60,61,62,63,64,66,67,69,70,71,72,74,75,76,77,78,79,80,81,82,83,85,86,88,90,91,93,98,99,100,104,105,111,112,113,115,],[-15,-16,41,41,-44,41,41,-43,41,-42,41,41,-45,41,-41,-29,-30,-35,41,41,41,41,41,41,41,-39,41,41,41,41,-40,41,-28,41,-34,-38,-33,-36,-37,-31,-32,-17,41,41,41,41,-20,41,-27,41,41,-18,-26,-19,]),'ELSE':([5,14,36,39,41,44,47,53,54,55,69,75,77,79,80,81,82,83,85,86,88,95,99,104,112,113,115,],[-15,-16,-44,-43,-42,-45,-41,-29,-30,-35,-39,-40,-28,-34,-38,-33,-36,-37,-31,-32,-17,105,-20,-27,-18,-26,-19,]),'POOL':([5,14,36,39,41,44,47,53,54,55,69,75,77,79,80,81,82,83,85,86,88,94,99,104,112,113,115,],[-15,-16,-44,-43,-42,-45,-41,-29,-30,-35,-39,-40,-28,-34,-38,-33,-36,-37,-31,-32,-17,104,-20,-27,-18,-26,-19,]),'IF':([5,14,29,34,36,37,38,39,40,41,42,43,44,46,47,53,54,55,60,61,62,63,64,66,67,69,70,71,72,74,75,76,77,78,79,80,81,82,83,85,86,88,90,91,93,98,99,100,104,105,111,112,113,115,],[-15,-16,42,42,-44,42,42,-43,42,-42,42,42,-45,42,-41,-29,-30,-35,42,42,42,42,42,42,42,-39,42,42,42,42,-40,42,-28,42,-34,-38,-33,-36,-37,-31,-32,-17,42,42,42,42,-20,42,-27,42,42,-18,-26,-19,]),'LBRACE':([5,6,11,14,29,34,36,37,38,39,40,41,42,43,44,46,47,48,53,54,55,60,61,62,63,64,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,90,91,93,98,99,100,104,105,111,112,113,115,],[-15,9,16,-16,43,43,-44,43,43,-43,43,-42,43,43,-45,43,-41,72,-29,-30,-35,43,43,43,43,43,43,43,-39,43,43,43,93,43,-40,43,-28,43,-34,-38,-33,-36,-37,-31,-32,-17,43,43,43,43,-20,43,-27,43,43,-18,-26,-19,]),'FALSE':([5,14,29,34,36,37,38,39,40,41,42,43,44,46,47,53,54,55,60,61,62,63,64,66,67,69,70,71,72,74,75,76,77,78,79,80,81,82,83,85,86,88,90,91,93,98,99,100,104,105,111,112,113,115,],[-15,-16,44,44,-44,44,44,-43,44,-42,44,44,-45,44,-41,-29,-30,-35,44,44,44,44,44,44,44,-39,44,44,44,44,-40,44,-28,44,-34,-38,-33,-36,-37,-31,-32,-17,44,44,44,44,-20,44,-27,44,44,-18,-26,-19,]),'NOT':([5,14,29,34,36,37,38,39,40,41,42,43,44,46,47,53,54,55,60,61,62,63,64,66,67,69,70,71,72,74,75,76,77,78,79,80,81,82,83,85,86,88,90,91,93,98,99,100,104,105,111,112,113,115,],[-15,-16,46,46,-44,46,46,-43,46,-42,46,46,-45,46,-41,-29,-30,-35,46,46,46,46,46,46,46,-39,46,46,46,46,-40,46,-28,46,-34,-38,-33,-36,-37,-31,-32,-17,46,46,46,46,-20,46,-27,46,46,-18,-26,-19,]),'TYPE':([2,8,19,30,32,35,49,65,],[5,5,5,5,5,5,5,5,]),'LOOP':([5,14,36,39,41,44,47,52,53,54,55,69,75,77,79,80,81,82,83,85,86,88,99,104,112,113,115,],[-15,-16,-44,-43,-42,-45,-41,74,-29,-30,-35,-39,-40,-28,-34,-38,-33,-36,-37,-31,-32,-17,-20,-27,-18,-26,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'arglist':([71,91,98,100,111,],[89,101,107,108,114,]),'classlist':([0,7,],[1,10,]),'formallist':([20,33,],[25,51,]),'feature':([9,16,17,],[12,12,12,]),'exprlist':([43,78,],[58,96,]),'program':([0,],[3,]),'featurelist':([9,16,17,],[13,21,22,]),'expr':([29,34,37,38,40,42,43,46,60,61,62,63,64,66,67,70,71,72,74,76,78,90,91,93,98,100,105,111,],[45,52,54,55,56,57,59,69,79,80,81,82,83,85,86,88,91,92,94,95,59,100,91,103,91,91,110,91,]),'identifier':([9,16,17,20,29,33,34,37,38,40,42,43,46,60,61,62,63,64,66,67,68,70,71,72,74,76,78,90,91,93,97,98,100,105,111,],[15,15,15,26,47,26,47,47,47,47,47,47,47,47,47,47,47,47,47,47,87,47,47,47,47,47,47,47,47,47,106,47,47,47,47,]),'type':([2,8,19,30,32,35,49,65,],[6,11,23,48,50,53,73,84,]),'class':([0,7,],[4,4,]),'formal':([20,33,],[27,27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> classlist','program',1,'p_program_classlist','main.py',106),
  ('classlist -> class SEMI','classlist',2,'p_classlist_single','main.py',110),
  ('classlist -> class SEMI classlist','classlist',3,'p_classlist_many','main.py',114),
  ('class -> CLASS type LBRACE featurelist RBRACE','class',5,'p_class_noinherit','main.py',118),
  ('class -> CLASS type INHERITS type LBRACE featurelist RBRACE','class',7,'p_class_inherit','main.py',122),
  ('featurelist -> <empty>','featurelist',0,'p_featurelist_none','main.py',126),
  ('featurelist -> feature SEMI featurelist','featurelist',3,'p_featurelist_some','main.py',130),
  ('feature -> identifier COLON type','feature',3,'p_feature_attributenoinit','main.py',134),
  ('feature -> identifier COLON type LARROW expr','feature',5,'p_feature_attributeinit','main.py',138),
  ('feature -> identifier LPAREN formallist RPAREN COLON type LBRACE expr RBRACE','feature',9,'p_feature_method_args','main.py',142),
  ('feature -> identifier LPAREN RPAREN COLON type LBRACE expr RBRACE','feature',8,'p_feature_method_noargs','main.py',146),
  ('formallist -> formal','formallist',1,'p_formallist_one','main.py',150),
  ('formallist -> formal COMMA formallist','formallist',3,'p_formallist_some','main.py',154),
  ('formal -> identifier COLON type','formal',3,'p_formal_only','main.py',158),
  ('type -> TYPE','type',1,'p_type','main.py',162),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','main.py',166),
  ('expr -> identifier LARROW expr','expr',3,'p_expr_assign','main.py',173),
  ('expr -> expr DOT identifier LPAREN arglist RPAREN','expr',6,'p_expr_dynamic_dispatch','main.py',178),
  ('expr -> expr AT type DOT identifier LPAREN arglist RPAREN','expr',8,'p_expr_static_dispatch','main.py',182),
  ('expr -> identifier LPAREN arglist RPAREN','expr',4,'p_expr_self_dispatch','main.py',186),
  ('exprlist -> expr SEMI','exprlist',2,'p_exprlist_one','main.py',194),
  ('exprlist -> expr SEMI exprlist','exprlist',3,'p_exprlist_many','main.py',198),
  ('arglist -> COMMA expr arglist','arglist',3,'p_arglist_many','main.py',202),
  ('arglist -> expr arglist','arglist',2,'p_arglist_one','main.py',206),
  ('arglist -> <empty>','arglist',0,'p_arglist_none','main.py',210),
  ('expr -> IF expr THEN expr ELSE expr FI','expr',7,'p_expr_if','main.py',214),
  ('expr -> WHILE expr LOOP expr POOL','expr',5,'p_expr_while','main.py',218),
  ('expr -> LBRACE exprlist RBRACE','expr',3,'p_expr_block','main.py',222),
  ('expr -> NEW type','expr',2,'p_expr_new','main.py',226),
  ('expr -> ISVOID expr','expr',2,'p_expr_isvoid','main.py',230),
  ('expr -> expr PLUS expr','expr',3,'p_expr_plus','main.py',234),
  ('expr -> expr MINUS expr','expr',3,'p_expr_minus','main.py',238),
  ('expr -> expr TIMES expr','expr',3,'p_expr_times','main.py',242),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_divide','main.py',246),
  ('expr -> TILDE expr','expr',2,'p_expr_negate','main.py',250),
  ('expr -> expr LT expr','expr',3,'p_expr_lt','main.py',254),
  ('expr -> expr LE expr','expr',3,'p_expr_le','main.py',258),
  ('expr -> expr EQUALS expr','expr',3,'p_expr_equals','main.py',262),
  ('expr -> NOT expr','expr',2,'p_expr_not','main.py',266),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_parens','main.py',270),
  ('expr -> identifier','expr',1,'p_expr_identifier','main.py',274),
  ('expr -> INTEGER','expr',1,'p_expr_integer','main.py',278),
  ('expr -> STRING','expr',1,'p_expr_string','main.py',282),
  ('expr -> TRUE','expr',1,'p_expr_true','main.py',286),
  ('expr -> FALSE','expr',1,'p_expr_false','main.py',290),
]
