
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '6AF238546F8D0EF10D901C937ADB803A'
    
_lr_action_items = {'THEN':([5,14,36,39,41,44,48,54,55,56,58,73,79,81,83,84,85,86,87,89,90,95,106,108,113,122,125,127,],[-15,-16,-45,-44,-43,-46,-42,-30,-31,-36,80,-40,-41,-29,-35,-39,-34,-37,-38,-32,-33,-17,-47,-20,-28,-18,-27,-19,]),'WHILE':([29,34,37,38,40,42,43,47,61,62,63,64,65,67,68,74,75,76,78,80,82,93,99,104,110,114,117,121,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'COLON':([14,15,24,26,31,72,],[-16,19,30,32,50,94,]),'NEW':([29,34,37,38,40,42,43,47,61,62,63,64,65,67,68,74,75,76,78,80,82,93,99,104,110,114,117,121,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'FI':([5,14,36,39,41,44,48,54,55,56,73,79,81,83,84,85,86,87,89,90,95,106,108,113,120,122,125,127,],[-15,-16,-45,-44,-43,-46,-42,-30,-31,-36,-40,-41,-29,-35,-39,-34,-37,-38,-32,-33,-17,-47,-20,-28,125,-18,-27,-19,]),'TRUE':([29,34,37,38,40,42,43,47,61,62,63,64,65,67,68,74,75,76,78,80,82,93,99,104,110,114,117,121,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'MINUS':([5,14,36,39,41,44,45,48,53,54,55,56,57,58,60,73,79,81,83,84,85,86,87,89,90,95,97,98,100,101,106,108,112,113,118,120,122,123,125,127,],[-15,-16,-45,-44,-43,-46,68,-42,68,-30,-31,-36,68,68,68,68,-41,-29,-35,68,-34,68,68,-32,-33,68,68,68,68,68,68,-20,68,-28,68,68,-18,68,-27,-19,]),'DOT':([5,14,36,39,41,44,45,48,53,54,55,56,57,58,60,73,79,81,83,84,85,86,87,88,89,90,95,97,98,100,101,106,108,112,113,118,120,122,123,125,127,],[-15,-16,-45,-44,-43,-46,69,-42,69,-30,69,69,69,69,69,69,-41,-29,69,69,69,69,69,103,69,69,69,69,69,69,69,69,-20,69,-28,69,69,-18,69,-27,-19,]),'RBRACE':([5,9,13,14,16,17,21,22,36,39,41,44,48,54,55,56,59,73,79,81,82,83,84,85,86,87,89,90,95,98,102,106,108,112,113,122,125,127,],[-15,-6,18,-16,-6,-6,28,-7,-45,-44,-43,-46,-42,-30,-31,-36,81,-40,-41,-29,-21,-35,-39,-34,-37,-38,-32,-33,-17,111,-22,-47,-20,119,-28,-18,-27,-19,]),'LE':([5,14,36,39,41,44,45,48,53,54,55,56,57,58,60,73,79,81,83,84,85,86,87,89,90,95,97,98,100,101,106,108,112,113,118,120,122,123,125,127,],[-15,-16,-45,-44,-43,-46,65,-42,65,-30,-31,-36,65,65,65,65,-41,-29,-35,None,-34,None,None,-32,-33,65,65,65,65,65,65,-20,65,-28,65,65,-18,65,-27,-19,]),'RPAREN':([5,14,20,25,27,36,39,41,44,48,51,52,54,55,56,57,73,75,79,81,83,84,85,86,87,89,90,95,96,97,104,106,108,109,113,116,118,121,122,124,125,126,127,],[-15,-16,24,31,-12,-45,-44,-43,-46,-42,-14,-13,-30,-31,-36,79,-40,-26,-41,-29,-35,-39,-34,-37,-38,-32,-33,-17,108,-24,-26,-47,-20,-25,-28,122,-24,-26,-18,-23,-27,127,-19,]),'SEMI':([4,5,12,14,18,23,28,36,39,41,44,45,48,54,55,56,60,73,79,81,83,84,85,86,87,89,90,95,106,108,111,113,119,122,125,127,],[7,-15,17,-16,-4,-8,-5,-45,-44,-43,-46,-9,-42,-30,-31,-36,82,-40,-41,-29,-35,-39,-34,-37,-38,-32,-33,-17,-47,-20,-11,-28,-10,-18,-27,-19,]),'ISVOID':([29,34,37,38,40,42,43,47,61,62,63,64,65,67,68,74,75,76,78,80,82,93,99,104,110,114,117,121,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'LARROW':([5,14,23,48,107,],[-15,-16,29,74,117,]),'LT':([5,14,36,39,41,44,45,48,53,54,55,56,57,58,60,73,79,81,83,84,85,86,87,89,90,95,97,98,100,101,106,108,112,113,118,120,122,123,125,127,],[-15,-16,-45,-44,-43,-46,64,-42,64,-30,-31,-36,64,64,64,64,-41,-29,-35,None,-34,None,None,-32,-33,64,64,64,64,64,64,-20,64,-28,64,64,-18,64,-27,-19,]),'PLUS':([5,14,36,39,41,44,45,48,53,54,55,56,57,58,60,73,79,81,83,84,85,86,87,89,90,95,97,98,100,101,106,108,112,113,118,120,122,123,125,127,],[-15,-16,-45,-44,-43,-46,67,-42,67,-30,-31,-36,67,67,67,67,-41,-29,-35,67,-34,67,67,-32,-33,67,67,67,67,67,67,-20,67,-28,67,67,-18,67,-27,-19,]),'TILDE':([29,34,37,38,40,42,43,47,61,62,63,64,65,67,68,74,75,76,78,80,82,93,99,104,110,114,117,121,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'COMMA':([5,14,27,36,39,41,44,48,51,54,55,56,70,73,79,81,83,84,85,86,87,89,90,95,97,106,107,108,113,118,122,123,125,127,],[-15,-16,33,-45,-44,-43,-46,-42,-14,-30,-31,-36,92,-40,-41,-29,-35,-39,-34,-37,-38,-32,-33,-17,110,-47,-50,-20,-28,110,-18,-51,-27,-19,]),'STRING':([29,34,37,38,40,42,43,47,61,62,63,64,65,67,68,74,75,76,78,80,82,93,99,104,110,114,117,121,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'IDENTIFIER':([9,16,17,20,29,33,34,37,38,40,42,43,46,47,61,62,63,64,65,67,68,69,74,75,76,78,80,82,92,93,99,103,104,110,114,117,121,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'CLASS':([0,7,],[2,2,]),'$end':([1,3,7,10,],[-1,0,-2,-3,]),'INHERITS':([5,6,],[-15,8,]),'DIVIDE':([5,14,36,39,41,44,45,48,53,54,55,56,57,58,60,73,79,81,83,84,85,86,87,89,90,95,97,98,100,101,106,108,112,113,118,120,122,123,125,127,],[-15,-16,-45,-44,-43,-46,61,-42,61,-30,-31,-36,61,61,61,61,-41,-29,-35,61,-34,61,61,61,61,61,61,61,61,61,61,-20,61,-28,61,61,-18,61,-27,-19,]),'EQUALS':([5,14,36,39,41,44,45,48,53,54,55,56,57,58,60,73,79,81,83,84,85,86,87,89,90,95,97,98,100,101,106,108,112,113,118,120,122,123,125,127,],[-15,-16,-45,-44,-43,-46,62,-42,62,-30,-31,-36,62,62,62,62,-41,-29,-35,None,-34,None,None,-32,-33,62,62,62,62,62,62,-20,62,-28,62,62,-18,62,-27,-19,]),'ELSE':([5,14,36,39,41,44,48,54,55,56,73,79,81,83,84,85,86,87,89,90,95,101,106,108,113,122,125,127,],[-15,-16,-45,-44,-43,-46,-42,-30,-31,-36,-40,-41,-29,-35,-39,-34,-37,-38,-32,-33,-17,114,-47,-20,-28,-18,-27,-19,]),'AT':([5,14,36,39,41,44,45,48,53,54,55,56,57,58,60,73,79,81,83,84,85,86,87,89,90,95,97,98,100,101,106,108,112,113,118,120,122,123,125,127,],[-15,-16,-45,-44,-43,-46,66,-42,66,-30,66,66,66,66,66,66,-41,-29,66,66,66,66,66,66,66,66,66,66,66,66,66,-20,66,-28,66,66,-18,66,-27,-19,]),'LPAREN':([14,15,29,34,37,38,40,42,43,47,48,61,62,63,64,65,67,68,74,75,76,78,80,82,91,93,99,104,110,114,115,117,121,],[-16,20,40,40,40,40,40,40,40,40,75,40,40,40,40,40,40,40,40,40,40,40,40,40,104,40,40,40,40,40,121,40,40,]),'IN':([5,14,36,39,41,44,48,54,55,56,70,71,73,79,81,83,84,85,86,87,89,90,95,105,106,107,108,113,122,123,125,127,],[-15,-16,-45,-44,-43,-46,-42,-30,-31,-36,-48,93,-40,-41,-29,-35,-39,-34,-37,-38,-32,-33,-17,-49,-47,-50,-20,-28,-18,-51,-27,-19,]),'TIMES':([5,14,36,39,41,44,45,48,53,54,55,56,57,58,60,73,79,81,83,84,85,86,87,89,90,95,97,98,100,101,106,108,112,113,118,120,122,123,125,127,],[-15,-16,-45,-44,-43,-46,63,-42,63,-30,-31,-36,63,63,63,63,-41,-29,-35,63,-34,63,63,63,63,63,63,63,63,63,63,-20,63,-28,63,63,-18,63,-27,-19,]),'POOL':([5,14,36,39,41,44,48,54,55,56,73,79,81,83,84,85,86,87,89,90,95,100,106,108,113,122,125,127,],[-15,-16,-45,-44,-43,-46,-42,-30,-31,-36,-40,-41,-29,-35,-39,-34,-37,-38,-32,-33,-17,113,-47,-20,-28,-18,-27,-19,]),'IF':([29,34,37,38,40,42,43,47,61,62,63,64,65,67,68,74,75,76,78,80,82,93,99,104,110,114,117,121,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'LBRACE':([5,6,11,29,34,37,38,40,42,43,47,49,61,62,63,64,65,67,68,74,75,76,77,78,80,82,93,99,104,110,114,117,121,],[-15,9,16,43,43,43,43,43,43,43,43,76,43,43,43,43,43,43,43,43,43,43,99,43,43,43,43,43,43,43,43,43,43,]),'FALSE':([29,34,37,38,40,42,43,47,61,62,63,64,65,67,68,74,75,76,78,80,82,93,99,104,110,114,117,121,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'INTEGER':([29,34,37,38,40,42,43,47,61,62,63,64,65,67,68,74,75,76,78,80,82,93,99,104,110,114,117,121,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'LET':([29,34,37,38,40,42,43,47,61,62,63,64,65,67,68,74,75,76,78,80,82,93,99,104,110,114,117,121,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'NOT':([29,34,37,38,40,42,43,47,61,62,63,64,65,67,68,74,75,76,78,80,82,93,99,104,110,114,117,121,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'TYPE':([2,8,19,30,32,35,50,66,94,],[5,5,5,5,5,5,5,5,5,]),'LOOP':([5,14,36,39,41,44,48,53,54,55,56,73,79,81,83,84,85,86,87,89,90,95,106,108,113,122,125,127,],[-15,-16,-45,-44,-43,-46,-42,78,-30,-31,-36,-40,-41,-29,-35,-39,-34,-37,-38,-32,-33,-17,-47,-20,-28,-18,-27,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'arglist':([75,104,121,],[96,116,126,]),'classlist':([0,7,],[1,10,]),'formallist':([20,33,],[25,52,]),'binding':([46,92,],[70,70,]),'feature':([9,16,17,],[12,12,12,]),'Barglist':([97,118,],[109,124,]),'exprlist':([43,82,],[59,102,]),'program':([0,],[3,]),'bindinglist':([46,92,],[71,105,]),'featurelist':([9,16,17,],[13,21,22,]),'expr':([29,34,37,38,40,42,43,47,61,62,63,64,65,67,68,74,75,76,78,80,82,93,99,104,110,114,117,121,],[45,53,55,56,57,58,60,73,83,84,85,86,87,89,90,95,97,98,100,101,60,106,112,97,118,120,123,97,]),'identifier':([9,16,17,20,29,33,34,37,38,40,42,43,46,47,61,62,63,64,65,67,68,69,74,75,76,78,80,82,92,93,99,103,104,110,114,117,121,],[15,15,15,26,48,26,48,48,48,48,48,48,72,48,48,48,48,48,48,48,48,91,48,48,48,48,48,48,72,48,48,115,48,48,48,48,48,]),'type':([2,8,19,30,32,35,50,66,94,],[6,11,23,49,51,54,77,88,107,]),'class':([0,7,],[4,4,]),'formal':([20,33,],[27,27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> classlist','program',1,'p_program_classlist','main.py',112),
  ('classlist -> class SEMI','classlist',2,'p_classlist_single','main.py',116),
  ('classlist -> class SEMI classlist','classlist',3,'p_classlist_many','main.py',120),
  ('class -> CLASS type LBRACE featurelist RBRACE','class',5,'p_class_noinherit','main.py',124),
  ('class -> CLASS type INHERITS type LBRACE featurelist RBRACE','class',7,'p_class_inherit','main.py',128),
  ('featurelist -> <empty>','featurelist',0,'p_featurelist_none','main.py',132),
  ('featurelist -> feature SEMI featurelist','featurelist',3,'p_featurelist_some','main.py',136),
  ('feature -> identifier COLON type','feature',3,'p_feature_attributenoinit','main.py',140),
  ('feature -> identifier COLON type LARROW expr','feature',5,'p_feature_attributeinit','main.py',144),
  ('feature -> identifier LPAREN formallist RPAREN COLON type LBRACE expr RBRACE','feature',9,'p_feature_method_args','main.py',148),
  ('feature -> identifier LPAREN RPAREN COLON type LBRACE expr RBRACE','feature',8,'p_feature_method_noargs','main.py',152),
  ('formallist -> formal','formallist',1,'p_formallist_one','main.py',156),
  ('formallist -> formal COMMA formallist','formallist',3,'p_formallist_some','main.py',160),
  ('formal -> identifier COLON type','formal',3,'p_formal_only','main.py',164),
  ('type -> TYPE','type',1,'p_type','main.py',168),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','main.py',172),
  ('expr -> identifier LARROW expr','expr',3,'p_expr_assign','main.py',179),
  ('expr -> expr DOT identifier LPAREN arglist RPAREN','expr',6,'p_expr_dynamic_dispatch','main.py',184),
  ('expr -> expr AT type DOT identifier LPAREN arglist RPAREN','expr',8,'p_expr_static_dispatch','main.py',188),
  ('expr -> identifier LPAREN arglist RPAREN','expr',4,'p_expr_self_dispatch','main.py',192),
  ('exprlist -> expr SEMI','exprlist',2,'p_exprlist_one','main.py',200),
  ('exprlist -> expr SEMI exprlist','exprlist',3,'p_exprlist_many','main.py',204),
  ('Barglist -> COMMA expr Barglist','Barglist',3,'p_Barglist_many','main.py',208),
  ('Barglist -> <empty>','Barglist',0,'p_Barglist_none','main.py',212),
  ('arglist -> expr Barglist','arglist',2,'p_arglist_one','main.py',216),
  ('arglist -> <empty>','arglist',0,'p_arglist_none','main.py',220),
  ('expr -> IF expr THEN expr ELSE expr FI','expr',7,'p_expr_if','main.py',224),
  ('expr -> WHILE expr LOOP expr POOL','expr',5,'p_expr_while','main.py',228),
  ('expr -> LBRACE exprlist RBRACE','expr',3,'p_expr_block','main.py',232),
  ('expr -> NEW type','expr',2,'p_expr_new','main.py',236),
  ('expr -> ISVOID expr','expr',2,'p_expr_isvoid','main.py',240),
  ('expr -> expr PLUS expr','expr',3,'p_expr_plus','main.py',244),
  ('expr -> expr MINUS expr','expr',3,'p_expr_minus','main.py',248),
  ('expr -> expr TIMES expr','expr',3,'p_expr_times','main.py',252),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_divide','main.py',256),
  ('expr -> TILDE expr','expr',2,'p_expr_negate','main.py',260),
  ('expr -> expr LT expr','expr',3,'p_expr_lt','main.py',264),
  ('expr -> expr LE expr','expr',3,'p_expr_le','main.py',268),
  ('expr -> expr EQUALS expr','expr',3,'p_expr_equals','main.py',272),
  ('expr -> NOT expr','expr',2,'p_expr_not','main.py',276),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_parens','main.py',280),
  ('expr -> identifier','expr',1,'p_expr_identifier','main.py',284),
  ('expr -> INTEGER','expr',1,'p_expr_integer','main.py',288),
  ('expr -> STRING','expr',1,'p_expr_string','main.py',292),
  ('expr -> TRUE','expr',1,'p_expr_true','main.py',296),
  ('expr -> FALSE','expr',1,'p_expr_false','main.py',300),
  ('expr -> LET bindinglist IN expr','expr',4,'p_expr_let','main.py',304),
  ('bindinglist -> binding','bindinglist',1,'p_bindinglist_one','main.py',308),
  ('bindinglist -> binding COMMA bindinglist','bindinglist',3,'p_bindinglist_many','main.py',312),
  ('binding -> identifier COLON type','binding',3,'p_binding_no_init','main.py',316),
  ('binding -> identifier COLON type LARROW expr','binding',5,'p_binding_init','main.py',320),
]
