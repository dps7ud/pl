
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '60F419E3EBDE60BB3E9D5960F73340B3'
    
_lr_action_items = {'THEN':([5,14,36,40,42,45,49,55,57,58,60,75,82,84,86,87,88,89,90,92,93,98,112,114,119,121,133,137,140,],[-15,-16,-45,-44,-43,-46,-42,-30,-31,-36,83,-40,-41,-29,-35,-39,-34,-37,-38,-32,-33,-17,-47,-20,-28,-52,-18,-27,-19,]),'WHILE':([29,34,37,38,39,41,43,44,48,63,64,65,66,67,69,70,76,77,78,80,83,85,96,102,110,116,123,126,132,136,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'COLON':([14,15,24,26,31,74,106,],[-16,19,30,32,51,97,122,]),'NEW':([29,34,37,38,39,41,43,44,48,63,64,65,66,67,69,70,76,77,78,80,83,85,96,102,110,116,123,126,132,136,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'FI':([5,14,36,40,42,45,49,55,57,58,75,82,84,86,87,88,89,90,92,93,98,112,114,119,121,131,133,137,140,],[-15,-16,-45,-44,-43,-46,-42,-30,-31,-36,-40,-41,-29,-35,-39,-34,-37,-38,-32,-33,-17,-47,-20,-28,-52,137,-18,-27,-19,]),'INTEGER':([29,34,37,38,39,41,43,44,48,63,64,65,66,67,69,70,76,77,78,80,83,85,96,102,110,116,123,126,132,136,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'TRUE':([29,34,37,38,39,41,43,44,48,63,64,65,66,67,69,70,76,77,78,80,83,85,96,102,110,116,123,126,132,136,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'MINUS':([5,14,36,40,42,45,46,49,54,55,56,57,58,59,60,62,75,82,84,86,87,88,89,90,92,93,98,100,101,103,107,112,114,118,119,121,127,131,133,134,137,139,140,],[-15,-16,-45,-44,-43,-46,70,-42,70,-30,70,-31,-36,70,70,70,70,-41,-29,-35,70,-34,70,70,-32,-33,70,70,70,70,70,70,-20,70,-28,-52,70,70,-18,70,-27,70,-19,]),'DOT':([5,14,36,40,42,45,46,49,54,55,56,57,58,59,60,62,75,82,84,86,87,88,89,90,91,92,93,98,100,101,103,107,112,114,118,119,121,127,131,133,134,137,139,140,],[-15,-16,-45,-44,-43,-46,71,-42,71,-30,71,71,71,71,71,71,71,-41,-29,71,71,71,71,71,109,71,71,71,71,71,71,71,71,-20,71,-28,-52,71,71,-18,71,-27,71,-19,]),'RBRACE':([5,9,13,14,16,17,21,22,36,40,42,45,49,55,57,58,61,75,82,84,85,86,87,88,89,90,92,93,98,101,108,112,114,118,119,121,133,137,140,],[-15,-6,18,-16,-6,-6,28,-7,-45,-44,-43,-46,-42,-30,-31,-36,84,-40,-41,-29,-21,-35,-39,-34,-37,-38,-32,-33,-17,117,-22,-47,-20,128,-28,-52,-18,-27,-19,]),'CASE':([29,34,37,38,39,41,43,44,48,63,64,65,66,67,69,70,76,77,78,80,83,85,96,102,110,116,123,126,132,136,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'LE':([5,14,36,40,42,45,46,49,54,55,56,57,58,59,60,62,75,82,84,86,87,88,89,90,92,93,98,100,101,103,107,112,114,118,119,121,127,131,133,134,137,139,140,],[-15,-16,-45,-44,-43,-46,67,-42,67,-30,67,-31,-36,67,67,67,67,-41,-29,-35,None,-34,None,None,-32,-33,67,67,67,67,67,67,-20,67,-28,-52,67,67,-18,67,-27,67,-19,]),'RPAREN':([5,14,20,25,27,36,40,42,45,49,52,53,55,57,58,59,75,77,82,84,86,87,88,89,90,92,93,98,99,100,110,112,114,115,119,121,125,127,132,133,135,137,138,140,],[-15,-16,24,31,-12,-45,-44,-43,-46,-42,-14,-13,-30,-31,-36,82,-40,-26,-41,-29,-35,-39,-34,-37,-38,-32,-33,-17,114,-24,-26,-47,-20,-25,-28,-52,133,-24,-26,-18,-23,-27,140,-19,]),'SEMI':([4,5,12,14,18,23,28,36,40,42,45,46,49,55,57,58,62,75,82,84,86,87,88,89,90,92,93,98,104,112,114,117,119,121,128,133,137,139,140,],[7,-15,17,-16,-4,-8,-5,-45,-44,-43,-46,-9,-42,-30,-31,-36,85,-40,-41,-29,-35,-39,-34,-37,-38,-32,-33,-17,120,-47,-20,-11,-28,-52,-10,-18,-27,-55,-19,]),'RARROW':([5,130,],[-15,136,]),'ISVOID':([29,34,37,38,39,41,43,44,48,63,64,65,66,67,69,70,76,77,78,80,83,85,96,102,110,116,123,126,132,136,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'LARROW':([5,14,23,49,113,],[-15,-16,29,76,126,]),'LT':([5,14,36,40,42,45,46,49,54,55,56,57,58,59,60,62,75,82,84,86,87,88,89,90,92,93,98,100,101,103,107,112,114,118,119,121,127,131,133,134,137,139,140,],[-15,-16,-45,-44,-43,-46,66,-42,66,-30,66,-31,-36,66,66,66,66,-41,-29,-35,None,-34,None,None,-32,-33,66,66,66,66,66,66,-20,66,-28,-52,66,66,-18,66,-27,66,-19,]),'PLUS':([5,14,36,40,42,45,46,49,54,55,56,57,58,59,60,62,75,82,84,86,87,88,89,90,92,93,98,100,101,103,107,112,114,118,119,121,127,131,133,134,137,139,140,],[-15,-16,-45,-44,-43,-46,69,-42,69,-30,69,-31,-36,69,69,69,69,-41,-29,-35,69,-34,69,69,-32,-33,69,69,69,69,69,69,-20,69,-28,-52,69,69,-18,69,-27,69,-19,]),'TILDE':([29,34,37,38,39,41,43,44,48,63,64,65,66,67,69,70,76,77,78,80,83,85,96,102,110,116,123,126,132,136,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'COMMA':([5,14,27,36,40,42,45,49,52,55,57,58,72,75,82,84,86,87,88,89,90,92,93,98,100,112,113,114,119,121,127,133,134,137,140,],[-15,-16,33,-45,-44,-43,-46,-42,-14,-30,-31,-36,95,-40,-41,-29,-35,-39,-34,-37,-38,-32,-33,-17,116,-47,-50,-20,-28,-52,116,-18,-51,-27,-19,]),'STRING':([29,34,37,38,39,41,43,44,48,63,64,65,66,67,69,70,76,77,78,80,83,85,96,102,110,116,123,126,132,136,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'IDENTIFIER':([9,16,17,20,29,33,34,37,38,39,41,43,44,47,48,63,64,65,66,67,69,70,71,76,77,78,80,81,83,85,95,96,102,109,110,116,120,123,126,132,136,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'CLASS':([0,7,],[2,2,]),'$end':([1,3,7,10,],[-1,0,-2,-3,]),'INHERITS':([5,6,],[-15,8,]),'DIVIDE':([5,14,36,40,42,45,46,49,54,55,56,57,58,59,60,62,75,82,84,86,87,88,89,90,92,93,98,100,101,103,107,112,114,118,119,121,127,131,133,134,137,139,140,],[-15,-16,-45,-44,-43,-46,63,-42,63,-30,63,-31,-36,63,63,63,63,-41,-29,-35,63,-34,63,63,63,63,63,63,63,63,63,63,-20,63,-28,-52,63,63,-18,63,-27,63,-19,]),'EQUALS':([5,14,36,40,42,45,46,49,54,55,56,57,58,59,60,62,75,82,84,86,87,88,89,90,92,93,98,100,101,103,107,112,114,118,119,121,127,131,133,134,137,139,140,],[-15,-16,-45,-44,-43,-46,64,-42,64,-30,64,-31,-36,64,64,64,64,-41,-29,-35,None,-34,None,None,-32,-33,64,64,64,64,64,64,-20,64,-28,-52,64,64,-18,64,-27,64,-19,]),'ELSE':([5,14,36,40,42,45,49,55,57,58,75,82,84,86,87,88,89,90,92,93,98,107,112,114,119,121,133,137,140,],[-15,-16,-45,-44,-43,-46,-42,-30,-31,-36,-40,-41,-29,-35,-39,-34,-37,-38,-32,-33,-17,123,-47,-20,-28,-52,-18,-27,-19,]),'ESAC':([105,120,129,],[121,-53,-54,]),'AT':([5,14,36,40,42,45,46,49,54,55,56,57,58,59,60,62,75,82,84,86,87,88,89,90,92,93,98,100,101,103,107,112,114,118,119,121,127,131,133,134,137,139,140,],[-15,-16,-45,-44,-43,-46,68,-42,68,-30,68,68,68,68,68,68,68,-41,-29,68,68,68,68,68,68,68,68,68,68,68,68,68,-20,68,-28,-52,68,68,-18,68,-27,68,-19,]),'LPAREN':([14,15,29,34,37,38,39,41,43,44,48,49,63,64,65,66,67,69,70,76,77,78,80,83,85,94,96,102,110,116,123,124,126,132,136,],[-16,20,41,41,41,41,41,41,41,41,41,77,41,41,41,41,41,41,41,41,41,41,41,41,41,110,41,41,41,41,41,132,41,41,41,]),'IN':([5,14,36,40,42,45,49,55,57,58,72,73,75,82,84,86,87,88,89,90,92,93,98,111,112,113,114,119,121,133,134,137,140,],[-15,-16,-45,-44,-43,-46,-42,-30,-31,-36,-48,96,-40,-41,-29,-35,-39,-34,-37,-38,-32,-33,-17,-49,-47,-50,-20,-28,-52,-18,-51,-27,-19,]),'TIMES':([5,14,36,40,42,45,46,49,54,55,56,57,58,59,60,62,75,82,84,86,87,88,89,90,92,93,98,100,101,103,107,112,114,118,119,121,127,131,133,134,137,139,140,],[-15,-16,-45,-44,-43,-46,65,-42,65,-30,65,-31,-36,65,65,65,65,-41,-29,-35,65,-34,65,65,65,65,65,65,65,65,65,65,-20,65,-28,-52,65,65,-18,65,-27,65,-19,]),'POOL':([5,14,36,40,42,45,49,55,57,58,75,82,84,86,87,88,89,90,92,93,98,103,112,114,119,121,133,137,140,],[-15,-16,-45,-44,-43,-46,-42,-30,-31,-36,-40,-41,-29,-35,-39,-34,-37,-38,-32,-33,-17,119,-47,-20,-28,-52,-18,-27,-19,]),'IF':([29,34,37,38,39,41,43,44,48,63,64,65,66,67,69,70,76,77,78,80,83,85,96,102,110,116,123,126,132,136,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'LBRACE':([5,6,11,29,34,37,38,39,41,43,44,48,50,63,64,65,66,67,69,70,76,77,78,79,80,83,85,96,102,110,116,123,126,132,136,],[-15,9,16,44,44,44,44,44,44,44,44,44,78,44,44,44,44,44,44,44,44,44,44,102,44,44,44,44,44,44,44,44,44,44,44,]),'FALSE':([29,34,37,38,39,41,43,44,48,63,64,65,66,67,69,70,76,77,78,80,83,85,96,102,110,116,123,126,132,136,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'OF':([5,14,36,40,42,45,49,55,56,57,58,75,82,84,86,87,88,89,90,92,93,98,112,114,119,121,133,137,140,],[-15,-16,-45,-44,-43,-46,-42,-30,81,-31,-36,-40,-41,-29,-35,-39,-34,-37,-38,-32,-33,-17,-47,-20,-28,-52,-18,-27,-19,]),'LET':([29,34,37,38,39,41,43,44,48,63,64,65,66,67,69,70,76,77,78,80,83,85,96,102,110,116,123,126,132,136,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'NOT':([29,34,37,38,39,41,43,44,48,63,64,65,66,67,69,70,76,77,78,80,83,85,96,102,110,116,123,126,132,136,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'TYPE':([2,8,19,30,32,35,51,68,97,122,],[5,5,5,5,5,5,5,5,5,5,]),'LOOP':([5,14,36,40,42,45,49,54,55,57,58,75,82,84,86,87,88,89,90,92,93,98,112,114,119,121,133,137,140,],[-15,-16,-45,-44,-43,-46,-42,80,-30,-31,-36,-40,-41,-29,-35,-39,-34,-37,-38,-32,-33,-17,-47,-20,-28,-52,-18,-27,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'case':([81,120,],[104,104,]),'arglist':([77,110,132,],[99,125,138,]),'caselist':([81,120,],[105,129,]),'classlist':([0,7,],[1,10,]),'formallist':([20,33,],[25,53,]),'binding':([47,95,],[72,72,]),'feature':([9,16,17,],[12,12,12,]),'exprlist':([44,85,],[61,108,]),'program':([0,],[3,]),'bindinglist':([47,95,],[73,111,]),'featurelist':([9,16,17,],[13,21,22,]),'expr':([29,34,37,38,39,41,43,44,48,63,64,65,66,67,69,70,76,77,78,80,83,85,96,102,110,116,123,126,132,136,],[46,54,56,57,58,59,60,62,75,86,87,88,89,90,92,93,98,100,101,103,107,62,112,118,100,127,131,134,100,139,]),'B':([100,127,],[115,135,]),'identifier':([9,16,17,20,29,33,34,37,38,39,41,43,44,47,48,63,64,65,66,67,69,70,71,76,77,78,80,81,83,85,95,96,102,109,110,116,120,123,126,132,136,],[15,15,15,26,49,26,49,49,49,49,49,49,49,74,49,49,49,49,49,49,49,49,94,49,49,49,49,106,49,49,74,49,49,124,49,49,106,49,49,49,49,]),'type':([2,8,19,30,32,35,51,68,97,122,],[6,11,23,50,52,55,79,91,113,130,]),'class':([0,7,],[4,4,]),'formal':([20,33,],[27,27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> classlist','program',1,'p_program_classlist','main.py',128),
  ('classlist -> class SEMI','classlist',2,'p_classlist_single','main.py',132),
  ('classlist -> class SEMI classlist','classlist',3,'p_classlist_many','main.py',136),
  ('class -> CLASS type LBRACE featurelist RBRACE','class',5,'p_class_noinherit','main.py',140),
  ('class -> CLASS type INHERITS type LBRACE featurelist RBRACE','class',7,'p_class_inherit','main.py',144),
  ('featurelist -> <empty>','featurelist',0,'p_featurelist_none','main.py',148),
  ('featurelist -> feature SEMI featurelist','featurelist',3,'p_featurelist_some','main.py',152),
  ('feature -> identifier COLON type','feature',3,'p_feature_attributenoinit','main.py',156),
  ('feature -> identifier COLON type LARROW expr','feature',5,'p_feature_attributeinit','main.py',160),
  ('feature -> identifier LPAREN formallist RPAREN COLON type LBRACE expr RBRACE','feature',9,'p_feature_method_args','main.py',164),
  ('feature -> identifier LPAREN RPAREN COLON type LBRACE expr RBRACE','feature',8,'p_feature_method_noargs','main.py',168),
  ('formallist -> formal','formallist',1,'p_formallist_one','main.py',172),
  ('formallist -> formal COMMA formallist','formallist',3,'p_formallist_some','main.py',176),
  ('formal -> identifier COLON type','formal',3,'p_formal_only','main.py',180),
  ('type -> TYPE','type',1,'p_type','main.py',185),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','main.py',189),
  ('expr -> identifier LARROW expr','expr',3,'p_expr_assign','main.py',194),
  ('expr -> expr DOT identifier LPAREN arglist RPAREN','expr',6,'p_expr_dynamic_dispatch','main.py',198),
  ('expr -> expr AT type DOT identifier LPAREN arglist RPAREN','expr',8,'p_expr_static_dispatch','main.py',202),
  ('expr -> identifier LPAREN arglist RPAREN','expr',4,'p_expr_self_dispatch','main.py',206),
  ('exprlist -> expr SEMI','exprlist',2,'p_exprlist_one','main.py',210),
  ('exprlist -> expr SEMI exprlist','exprlist',3,'p_exprlist_many','main.py',214),
  ('B -> COMMA expr B','B',3,'p_B_many','main.py',218),
  ('B -> <empty>','B',0,'p_B_none','main.py',222),
  ('arglist -> expr B','arglist',2,'p_arglist_one','main.py',226),
  ('arglist -> <empty>','arglist',0,'p_arglist_none','main.py',230),
  ('expr -> IF expr THEN expr ELSE expr FI','expr',7,'p_expr_if','main.py',234),
  ('expr -> WHILE expr LOOP expr POOL','expr',5,'p_expr_while','main.py',238),
  ('expr -> LBRACE exprlist RBRACE','expr',3,'p_expr_block','main.py',242),
  ('expr -> NEW type','expr',2,'p_expr_new','main.py',246),
  ('expr -> ISVOID expr','expr',2,'p_expr_isvoid','main.py',250),
  ('expr -> expr PLUS expr','expr',3,'p_expr_plus','main.py',254),
  ('expr -> expr MINUS expr','expr',3,'p_expr_minus','main.py',258),
  ('expr -> expr TIMES expr','expr',3,'p_expr_times','main.py',262),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_divide','main.py',266),
  ('expr -> TILDE expr','expr',2,'p_expr_negate','main.py',270),
  ('expr -> expr LT expr','expr',3,'p_expr_lt','main.py',274),
  ('expr -> expr LE expr','expr',3,'p_expr_le','main.py',278),
  ('expr -> expr EQUALS expr','expr',3,'p_expr_equals','main.py',282),
  ('expr -> NOT expr','expr',2,'p_expr_not','main.py',286),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_parens','main.py',290),
  ('expr -> identifier','expr',1,'p_expr_identifier','main.py',294),
  ('expr -> INTEGER','expr',1,'p_expr_integer','main.py',298),
  ('expr -> STRING','expr',1,'p_expr_string','main.py',302),
  ('expr -> TRUE','expr',1,'p_expr_true','main.py',306),
  ('expr -> FALSE','expr',1,'p_expr_false','main.py',310),
  ('expr -> LET bindinglist IN expr','expr',4,'p_expr_let','main.py',314),
  ('bindinglist -> binding','bindinglist',1,'p_bindinglist_one','main.py',318),
  ('bindinglist -> binding COMMA bindinglist','bindinglist',3,'p_bindinglist_many','main.py',322),
  ('binding -> identifier COLON type','binding',3,'p_binding_no_init','main.py',326),
  ('binding -> identifier COLON type LARROW expr','binding',5,'p_binding_init','main.py',330),
  ('expr -> CASE expr OF caselist ESAC','expr',5,'p_expr_switch','main.py',334),
  ('caselist -> case SEMI','caselist',2,'p_caselist_one','main.py',338),
  ('caselist -> case SEMI caselist','caselist',3,'p_caselist_many','main.py',342),
  ('case -> identifier COLON type RARROW expr','case',5,'p_case_only','main.py',346),
]
